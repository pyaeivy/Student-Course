{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-otp-input/fesm2022/ng-otp-input.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { forwardRef, Output, Input, Inject, Component, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl, FormGroup, FormControl, ReactiveFormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT, NgIf, NgFor, NgStyle, NgClass } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nconst _c0 = a0 => ({\n  \"error-input\": a0\n});\nfunction NgOtpInputComponent_div_0_ng_container_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.config.separator, \" \");\n  }\n}\nfunction NgOtpInputComponent_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"input\", 5, 0);\n    i0.ɵɵlistener(\"paste\", function NgOtpInputComponent_div_0_ng_container_2_Template_input_paste_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.handlePaste($event));\n    })(\"keyup\", function NgOtpInputComponent_div_0_ng_container_2_Template_input_keyup_1_listener($event) {\n      const i_r4 = i0.ɵɵrestoreView(_r3).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onKeyUp($event, i_r4));\n    })(\"input\", function NgOtpInputComponent_div_0_ng_container_2_Template_input_input_1_listener($event) {\n      const i_r4 = i0.ɵɵrestoreView(_r3).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onInput($event, i_r4));\n    })(\"keydown\", function NgOtpInputComponent_div_0_ng_container_2_Template_input_keydown_1_listener($event) {\n      const i_r4 = i0.ɵɵrestoreView(_r3).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onKeyDown($event, i_r4));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgOtpInputComponent_div_0_ng_container_2_span_3_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const last_r6 = ctx.last;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(i0.ɵɵinterpolate1(\"otp-input \", ctx_r1.config.inputClass));\n    i0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r5])(\"id\", ctx_r1.getBoxId(i_r4))(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, (ctx_r1.config == null ? null : ctx_r1.config.showError) && (ctx_r1.formControl == null ? null : ctx_r1.formControl.invalid) && ((ctx_r1.formControl == null ? null : ctx_r1.formControl.dirty) || (ctx_r1.formControl == null ? null : ctx_r1.formControl.touched))));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.config.separator && !last_r6);\n  }\n}\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"focusin\", function NgOtpInputComponent_div_0_Template_div_focusin_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFocusIn());\n    })(\"focusout\", function NgOtpInputComponent_div_0_Template_div_focusout_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onFocusOut());\n    });\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtemplate(2, NgOtpInputComponent_div_0_ng_container_2_Template, 4, 13, \"ng-container\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(i0.ɵɵinterpolate1(\"ng-otp-input-wrapper wrapper \", ctx_r1.config.containerClass));\n    i0.ɵɵproperty(\"id\", i0.ɵɵinterpolate1(\"c_\", ctx_r1.componentKey))(\"ngStyle\", ctx_r1.config.containerStyles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.controlKeys);\n  }\n}\nclass KeyboardUtil {\n  static ifTab(event) {\n    return this.ifKey(event, 'Tab');\n  }\n  static ifDelete(event) {\n    return this.ifKey(event, 'Delete;Del');\n  }\n  static ifBackspace(event) {\n    return this.ifKey(event, 'Backspace');\n  }\n  static ifRightArrow(event) {\n    return this.ifKey(event, 'ArrowRight;Right');\n  }\n  static ifLeftArrow(event) {\n    return this.ifKey(event, 'ArrowLeft;Left');\n  }\n  static ifSpacebar(event) {\n    return this.ifKey(event, 'Spacebar; '); //don't remove the space after ; as this will check for space key\n  }\n  static ifKey(event, keys) {\n    let keysToCheck = keys.split(';');\n    return keysToCheck.some(k => k === event.key);\n  }\n}\nclass ObjectUtil {\n  static keys(obj) {\n    if (!obj) return [];\n    return Object.keys(obj);\n  }\n}\nclass NgOtpInputComponent {\n  set disabled(isDisabled) {\n    this.setDisabledState(isDisabled);\n  }\n  get inputType() {\n    return this.config?.isPasswordInput ? 'password' : this.config?.allowNumbersOnly ? 'tel' : 'text';\n  }\n  get controlKeys() {\n    return ObjectUtil.keys(this.otpForm?.controls);\n  }\n  get formControl() {\n    return this.formCtrl ?? this.inj?.get(NgControl);\n  }\n  constructor(document, inj) {\n    this.document = document;\n    this.inj = inj;\n    this.config = {\n      length: 4\n    };\n    this.onBlur = new Subject();\n    this.onInputChange = new Subject();\n    this.inputControls = new Array(this.config.length);\n    this.componentKey = Math.random().toString(36).substring(2) + new Date().getTime().toString(36);\n    this.destroy$ = new Subject();\n    this.activeFocusCount = 0;\n    this.onChange = () => {};\n    this.onTouched = () => {};\n    this._isDisabled = false;\n  }\n  ngOnInit() {\n    this.otpForm = new FormGroup({});\n    for (let index = 0; index < this.config.length; index++) {\n      this.otpForm.addControl(this.getControlName(index), new FormControl());\n    }\n    this.otpForm.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(v => {\n      ObjectUtil.keys(this.otpForm.controls).forEach(k => {\n        var val = this.otpForm.controls[k].value;\n        if (val && val.length > 1) {\n          if (val.length >= this.config.length) {\n            this.setValue(val);\n          } else {\n            this.rebuildValue();\n          }\n        }\n      });\n    });\n  }\n  setDisabledState(isDisabled) {\n    this._isDisabled = isDisabled; // Update local state\n    if (this.otpForm) {\n      if (isDisabled) {\n        this.otpForm.disable({\n          emitEvent: false\n        }); // Disable form group\n      } else {\n        this.otpForm.enable({\n          emitEvent: false\n        }); // Enable form group\n      }\n    }\n  }\n  writeValue(value) {\n    this.currentVal = !this.hasVal(value) ? null : value;\n    this.setValue(this.currentVal);\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  onFocusIn() {\n    this.onTouched();\n    this.activeFocusCount++;\n  }\n  onFocusOut() {\n    setTimeout(() => {\n      this.activeFocusCount--;\n      if (this.activeFocusCount === 0) {\n        this.onTouched();\n        this.onBlur.next();\n      }\n    }, 0);\n  }\n  ngAfterViewInit() {\n    if (!this.config.disableAutoFocus) {\n      const containerItem = this.document.getElementById(`c_${this.componentKey}`);\n      if (containerItem) {\n        const ele = containerItem.getElementsByClassName('otp-input')[0];\n        if (ele && ele.focus) {\n          ele.focus();\n        }\n      }\n    }\n  }\n  getControlName(idx) {\n    return `ctrl_${idx}`;\n  }\n  onKeyDown($event, inputIdx) {\n    const prevInputId = this.getBoxId(inputIdx - 1);\n    const currentInputId = this.getBoxId(inputIdx);\n    if (KeyboardUtil.ifKey($event, 'Enter')) {\n      let inp = this.document.getElementById(currentInputId);\n      const form = inp?.closest('form');\n      if (form) {\n        $event.preventDefault();\n        const submitEvent = new Event('submit', {\n          bubbles: true,\n          cancelable: true\n        });\n        form.dispatchEvent(submitEvent);\n        return;\n      }\n    }\n    if (KeyboardUtil.ifSpacebar($event)) {\n      $event.preventDefault();\n      return false;\n    }\n    if (KeyboardUtil.ifBackspace($event)) {\n      if (!$event.target.value) {\n        this.clearInput(prevInputId, inputIdx - 1);\n        this.setSelected(prevInputId);\n      } else {\n        this.clearInput(currentInputId, inputIdx);\n      }\n      this.rebuildValue();\n      return;\n    }\n    if (KeyboardUtil.ifDelete($event)) {\n      if (!$event.target.value) {\n        this.clearInput(prevInputId, inputIdx - 1);\n        this.setSelected(prevInputId);\n      } else {\n        this.clearInput(currentInputId, inputIdx);\n      }\n      this.rebuildValue();\n      return;\n    }\n  }\n  hasVal(val) {\n    return val != null && val != undefined && (!val?.trim || val.trim() != '');\n  }\n  onInput($event, inputIdx) {\n    let newVal = this.hasVal(this.currentVal) ? `${this.currentVal}${$event.target.value}` : $event.target.value;\n    if (this.config.allowNumbersOnly && !this.validateNumber(newVal)) {\n      $event.target.value = null;\n      $event.stopPropagation();\n      $event.preventDefault();\n      this.clearInput(null, inputIdx);\n      return;\n    }\n    if (this.ifValidKeyCode(null, $event.target.value)) {\n      const nextInputId = this.getBoxId(inputIdx + 1);\n      this.setSelected(nextInputId);\n      this.rebuildValue();\n    } else {\n      $event.target.value = null;\n      let ctrlName = this.getControlName(inputIdx);\n      this.otpForm.controls[ctrlName]?.setValue(null);\n      this.rebuildValue();\n    }\n  }\n  onKeyUp($event, inputIdx) {\n    if (KeyboardUtil.ifTab($event)) {\n      inputIdx -= 1;\n    }\n    const nextInputId = this.getBoxId(inputIdx + 1);\n    const prevInputId = this.getBoxId(inputIdx - 1);\n    if (KeyboardUtil.ifRightArrow($event)) {\n      $event.preventDefault();\n      this.setSelected(nextInputId);\n      return;\n    }\n    if (KeyboardUtil.ifLeftArrow($event)) {\n      $event.preventDefault();\n      this.setSelected(prevInputId);\n      return;\n    }\n  }\n  validateNumber(val) {\n    return val && /^[0-9]+$/.test(val);\n  }\n  getBoxId(idx) {\n    return `otp_${idx}_${this.componentKey}`;\n  }\n  clearInput(eleId, inputIdx) {\n    let ctrlName = this.getControlName(inputIdx);\n    this.otpForm.controls[ctrlName]?.setValue(null);\n    if (eleId) {\n      const ele = this.document.getElementById(eleId);\n      if (ele && ele instanceof HTMLInputElement) {\n        ele.value = null;\n      }\n    }\n  }\n  setSelected(eleId) {\n    this.focusTo(eleId);\n    const ele = this.document.getElementById(eleId);\n    if (ele && ele.setSelectionRange) {\n      setTimeout(() => {\n        ele.setSelectionRange(0, 1);\n      }, 0);\n    }\n  }\n  ifValidKeyCode(event, val) {\n    const inp = val ?? event.key;\n    if (this.config?.allowNumbersOnly) {\n      return this.validateNumber(inp);\n    }\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    return isMobile || /^[a-zA-Z0-9%*_\\-@#$!]$/.test(inp) && inp.length == 1;\n  }\n  focusTo(eleId) {\n    const ele = this.document.getElementById(eleId);\n    if (ele) {\n      ele.focus();\n    }\n  }\n  // method to set component value\n  setValue(value) {\n    if (this.config.allowNumbersOnly && isNaN(value)) {\n      return;\n    }\n    this.otpForm?.reset();\n    if (!this.hasVal(value)) {\n      this.rebuildValue();\n      return;\n    }\n    value = value.toString().replace(/\\s/g, ''); // remove whitespace\n    Array.from(value).forEach((c, idx) => {\n      if (this.otpForm.get(this.getControlName(idx))) {\n        this.otpForm.get(this.getControlName(idx)).setValue(c);\n      }\n    });\n    if (!this.config.disableAutoFocus) {\n      setTimeout(() => {\n        const containerItem = this.document.getElementById(`c_${this.componentKey}`);\n        var indexOfElementToFocus = value.length < this.config.length ? value.length : this.config.length - 1;\n        let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\n        if (ele && ele.focus) {\n          setTimeout(() => {\n            ele.focus();\n          }, 1);\n        }\n      }, 0);\n    }\n    this.rebuildValue();\n  }\n  rebuildValue() {\n    let val = null;\n    ObjectUtil.keys(this.otpForm.controls).forEach(k => {\n      let ctrlVal = this.otpForm.controls[k].value;\n      if (ctrlVal) {\n        let isLengthExceed = ctrlVal.length > 1;\n        let isCaseTransformEnabled = !this.config.allowNumbersOnly && this.config.letterCase && (this.config.letterCase.toLocaleLowerCase() == 'upper' || this.config.letterCase.toLocaleLowerCase() == 'lower');\n        ctrlVal = ctrlVal[0];\n        let transformedVal = isCaseTransformEnabled ? this.config.letterCase.toLocaleLowerCase() == 'upper' ? ctrlVal.toUpperCase() : ctrlVal.toLowerCase() : ctrlVal;\n        if (isCaseTransformEnabled && transformedVal == ctrlVal) {\n          isCaseTransformEnabled = false;\n        } else {\n          ctrlVal = transformedVal;\n        }\n        if (val == null) {\n          val = ctrlVal;\n        } else {\n          val += ctrlVal;\n        }\n        if (isLengthExceed || isCaseTransformEnabled) {\n          this.otpForm.controls[k].setValue(ctrlVal);\n        }\n      }\n    });\n    if (this.currentVal != val) {\n      this.currentVal = val;\n      this.onChange(val);\n      if (this.formCtrl?.setValue) {\n        this.formCtrl.setValue(val);\n      }\n      this.onInputChange.next(val);\n    }\n  }\n  handlePaste(e) {\n    // Get pasted data via clipboard API\n    let clipboardData = e.clipboardData || window['clipboardData'];\n    if (clipboardData) {\n      var pastedData = clipboardData.getData('Text');\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    if (!pastedData || this.config.allowNumbersOnly && !this.validateNumber(pastedData)) {\n      return;\n    }\n    this.setValue(pastedData);\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function NgOtpInputComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgOtpInputComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Injector));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgOtpInputComponent,\n      selectors: [[\"ng-otp-input\"], [\"ngx-otp-input\"]],\n      inputs: {\n        config: \"config\",\n        formCtrl: \"formCtrl\",\n        disabled: \"disabled\"\n      },\n      outputs: {\n        onBlur: \"onBlur\",\n        onInputChange: \"onInputChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgOtpInputComponent),\n        multi: true\n      }])],\n      decls: 1,\n      vars: 1,\n      consts: [[\"inp\", \"\"], [\"tabindex\", \"0\", 3, \"class\", \"id\", \"ngStyle\", \"focusin\", \"focusout\", 4, \"ngIf\"], [\"tabindex\", \"0\", 3, \"focusin\", \"focusout\", \"id\", \"ngStyle\"], [1, \"n-o-c\"], [4, \"ngFor\", \"ngForOf\"], [\"autocomplete\", \"one-time-code\", 3, \"paste\", \"keyup\", \"input\", \"keydown\", \"pattern\", \"type\", \"placeholder\", \"ngStyle\", \"formControl\", \"id\", \"ngClass\"], [4, \"ngIf\"]],\n      template: function NgOtpInputComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 7, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.PatternValidator, i1.FormControlDirective, NgIf, NgFor, NgStyle, NgClass],\n      styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.ng-otp-input-wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]{margin:0 .51rem}.ng-otp-input-wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:first-child{margin-left:0}.ng-otp-input-wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:last-child{margin-right:0}.n-o-c[_ngcontent-%COMP%]{display:flex;align-items:center}.error-input[_ngcontent-%COMP%]{border-color:red}@media screen and (max-width: 767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgOtpInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-otp-input, ngx-otp-input',\n      imports: [ReactiveFormsModule, NgIf, NgFor, NgStyle, NgClass],\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgOtpInputComponent),\n        multi: true\n      }],\n      template: \"<div class=\\\"ng-otp-input-wrapper wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\" tabindex=\\\"0\\\" \\r\\n  (focusin)=\\\"onFocusIn()\\\" \\r\\n  (focusout)=\\\"onFocusOut()\\\">\\r\\n  <div class=\\\"n-o-c\\\">\\r\\n    <ng-container *ngFor=\\\"let item of controlKeys;let i=index;let last=last\\\">\\r\\n      <input (paste)=\\\"handlePaste($event)\\\" [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\"  [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n      [ngStyle]=\\\"config.inputStyles\\\" \\r\\n      class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"one-time-code\\\" \\r\\n      [formControl]=\\\"otpForm.controls[item]\\\" #inp [id]=\\\"getBoxId(i)\\\" \\r\\n      (keyup)=\\\"onKeyUp($event,i)\\\" (input)=\\\"onInput($event,i)\\\" (keydown)=\\\"onKeyDown($event,i)\\\" [ngClass]=\\\"{'error-input': (config?.showError && formControl?.invalid && (formControl?.dirty || formControl?.touched))}\\\">\\r\\n      <span *ngIf=\\\"config.separator && !last\\\">\\r\\n        {{config.separator}}\\r\\n      </span>\\r\\n    </ng-container>\\r\\n  </div>  \\r\\n</div>\",\n      styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.ng-otp-input-wrapper .otp-input{margin:0 .51rem}.ng-otp-input-wrapper .otp-input:first-child{margin-left:0}.ng-otp-input-wrapper .otp-input:last-child{margin-right:0}.n-o-c{display:flex;align-items:center}.error-input{border-color:red}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"]\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i0.Injector\n  }], {\n    config: [{\n      type: Input\n    }],\n    formCtrl: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onInputChange: [{\n      type: Output\n    }]\n  });\n})();\nclass NgOtpInputModule {\n  /** @nocollapse */static {\n    this.ɵfac = function NgOtpInputModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgOtpInputModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgOtpInputModule,\n      imports: [NgOtpInputComponent],\n      exports: [NgOtpInputComponent]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [NgOtpInputComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgOtpInputModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgOtpInputComponent],\n      exports: [NgOtpInputComponent]\n    }]\n  }], null, null);\n})();\nclass Config {}\n\n/*\n * Public API Surface of ng-otp-input\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgOtpInputComponent, Config as NgOtpInputConfig, NgOtpInputModule };\n"],
  "mappings": "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",
  "names": []
}
